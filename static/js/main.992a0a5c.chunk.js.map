{"version":3,"sources":["p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h3/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/Preloader.jsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Message","props","className","c","global","avatar","src","message","name","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","SuperButton","red","restProps","finalClassName","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","New","charAt","toUpperCase","slice","inputClass","length","input","div","code","placeholder","button","GreetingContainer","users","addUserCallback","setName","setError","includes","toLowerCase","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","buttondelete","disabled","buttondisable","check","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","m","i","selectedIndex","console","log","SuperRadio","o","arr","HW7","PreJunior","Error404","initialPeople","age","HW8","people","setPeople","finalPeople","p","sortUp","action","sort","b","localeCompare","homeWorkReducer","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","style","display","id","window","setInterval","Date","HW9","Wrapper","styled","CircleSpinner","size","sizeUnit","color","keyframes","Circle","defaultProps","loadingAC","HW10","loading","useSelector","loadingReducer","dispatch","useDispatch","Preloader","setTimeout","SuperRange","onChangeRange","finalRangeClassName","range","MultiRangeSlider","min","max","minVal","setMinVal","maxVal","setMaxVal","minValRef","useRef","maxValRef","getPercent","useCallback","Math","round","useEffect","current","minPercent","maxPercent","left","width","ref","event","target","toString","classnames","HW11","value1","setValue1","value2","setValue2","initState","themes","HW12","theme","themeReducer","onChangeCallback","Junior","PATH","Routes2","path","element","Header","isActive","to","HW5","Routes","App","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.992a0a5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3Y0OT\",\"column\":\"HW4_column__2y8vg\",\"testSpanError\":\"HW4_testSpanError__2TZqf\",\"button\":\"HW4_button__1jKPL\",\"input\":\"HW4_input__1ZDgE\",\"span\":\"HW4_span__1rVZu\",\"buttondelete\":\"HW4_buttondelete__29JSE\",\"buttondisable\":\"HW4_buttondisable__2PFi2\",\"custom-checkbox\":\"HW4_custom-checkbox__1QjLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Message_global__2ZzuQ\",\"avatar\":\"Message_avatar__2GcBa\",\"message\":\"Message_message__33u83\",\"name\":\"Message_name__2fs5z\",\"time\":\"Message_time__f0-qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__277mM\",\"error\":\"Greeting_error__po7LW\",\"button\":\"Greeting_button__3aOh8\",\"input\":\"Greeting_input__2uPFg\",\"span\":\"Greeting_span__3Gr71\",\"div\":\"Greeting_div__2-TPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__3oPyd\",\"dark-text\":\"HW12_dark-text__1_IIH\",\"red\":\"HW12_red__j2bsG\",\"red-text\":\"HW12_red-text__2kEJx\",\"some\":\"HW12_some__2M_8z\",\"some-text\":\"HW12_some-text__12hKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3vDG1\",\"errorInput\":\"SuperInputText_errorInput__fM_WM\",\"error\":\"SuperInputText_error__28Imc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ut5l\",\"errorInput\":\"SuperInputText_errorInput__2burA\",\"error\":\"SuperInputText_error__3zCTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1GCBr\",\"spanClassName\":\"SuperCheckbox_spanClassName__3XtVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15a0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__1LQc3\"};","import React from 'react'\nimport c from \"./Message.module.css\"\n\n\ntype  typeData = {\n    avatar: string,\n    name: string,\n    message: string,\n    time:string\n}\n\n\n\nfunction Message(props:typeData) {\n    return (\n        <div className={c.global}>\n            <div className={c.avatar}>\n               <img src={props.avatar}/>\n            </div>\n            <div className={c.message}>\n                {props.message}\n            </div>\n            <div className={c.name}>\n                <b> {props.name}</b>\n            </div>\n            <div className={c.time}>\n                   {props.time}\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from './Message'\n\ntype  typeData = {\n    avatar: string,\n    name: string,\n    messages: string,\n    time: string\n}\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'Ты нажал NPM?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n    return (\n        <div>\n\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair;\n","import React, { Dispatch, SetStateAction } from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a:AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = any // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string\n}\nexport type  FilterType = 'high'|'low'|'middle'|'all'\n\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter:FilterType ):any => {\n\n    if (filter === 'all') return  affairs.filter( f => f.priority === f.priority)\n    if (filter === 'high') return  affairs.filter( f => f.priority === 'high')\n    if (filter === 'middle') return  affairs.filter( f => f.priority === 'middle')\n    if (filter === 'low') return  affairs.filter( f => f.priority === 'low')\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):Array<AffairType> => affairs.filter( a => a._id !== _id )\n\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)  // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className: ''}`  // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\nimport SuperInputText from \"./c1-SuperInputText/SuperInputText\";\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting = ({name, setNameCallback, addUser, error, totalUsers}: GreetingPropsType) => {\n    let New = name.charAt(0).toUpperCase() + name.slice(1)\n\n    let inputClass = (New.length <= 2 ? s.error : s.input)\n    const onKeyPress = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.code === \"Enter\") {\n            addUser()\n        }\n    }\n\n\n    return (\n        <div className={s.div} onKeyPress={onKeyPress}>\n            <SuperInputText placeholder={error} className={inputClass} value={New} onChange={setNameCallback}/>\n            {/*<input value={New} onChange={setNameCallback} className={inputClass}/>*/}\n           <SuperButton onClick={addUser} className={s.button}>add</SuperButton>\n            {/*<button onClick={addUser}>add</button>*/}\n           <b > {totalUsers}</b>\n\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer = ({users, addUserCallback}: GreetingContainerPropsType) => { // деструктуризация пропсов\n    const [name, setName] = useState<any>('') // need to fix any\n    const [error, setError] = useState<any>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let arr_en = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ''];\n        const value = e.currentTarget.value\n        if (arr_en.includes(value.slice(-1).toLowerCase())) {\n            setError('')\n            setName(value)\n        }\n    }\n\n    const addUser = () => {\n        if (name.length <= 2) {\n            setName('')\n            setError('error')\n        } else {\n            alert(`Hello ${name} ! `)\n            addUserCallback(name)\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let New: UserType = {\n            name: name,\n            _id: v1()\n        }\n        setUsers([New, ...users]) // need to fix\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className: ''}`  // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        {onChangeChecked &&  onChangeChecked(e.currentTarget.checked)}\n        {onChange && onChange(e)}\n\n\n            // onChangeChecked(e.currentTarget.checked)\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n\n            <input\n                type={'checkbox'}\n                onChange={ onChangeCallback}\n                className={finalInputClassName}\n                checked={restProps.checked}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    className={s.input}\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.input}// проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton  className={s.button} >\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                    className={s.buttondelete}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled className={s.buttondisable}>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                    className={s.check}\n                >\n\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox   checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(!editMode)\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n\n        setEditMode(!editMode)\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(!editMode)\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState('editable-span-value', value))\n\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        value,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] =  options ? options.map((m,i)=> (<option key={i}>{m}</option> )):[]// map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        {onChangeOption && onChangeOption(e.currentTarget.selectedIndex)}\n        console.log(e.currentTarget.selectedIndex)\n        console.log(value)\n    }\n\n    return (\n        <select   onChange={onChangeCallback} value={value}  >\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (o:number) => {\n        {onChangeOption && onChangeOption(o)}\n        console.log(o)\n\n    }\n    console.log(value)\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                checked={value === o ? true: false}\n                value={o}\n                // onChange={()=> onChangeCallback(o)}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[0])\n    console.log(value)\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\nimport HW7 from \"../../h7/HW7\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport './Error404.css'\n\n\n\nfunction Error404() {\n    return (\n        <div className='error'>\n            <div >404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {useState} from 'react'\nimport {homeWorkReducer, stateType} from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\n\n\n export const initialPeople = [\n    {_id: 0, name: 'Кот', age: 3},\n    {_id: 1, name: 'Александр', age: 66},\n    {_id: 2, name: 'Коля', age: 16},\n    {_id: 3, name: 'Виктор', age: 44},\n    {_id: 4, name: 'Дмитрий', age: 40},\n    {_id: 5, name: 'Ирина', age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState<Array<stateType>>(initialPeople) // need to fix any\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            <span>{p.name} </span>\n           <span> {p.age}</span>\n        </div>\n    ))\n\n    const sortUp = (type:string) => setPeople(homeWorkReducer(initialPeople, {type}))\n\n\n    return (\n        <div>\n            <hr/>\n            <b> homeworks 8 </b>\n\n            {/*should work (должно работать)*/}\n            {finalPeople}\n\n            <div><SuperButton onClick={()=>sortUp('UP')}>sort up</SuperButton></div>\n            <div><SuperButton onClick={()=>sortUp('DOWN')}>sort down</SuperButton></div>\n            <div><SuperButton onClick={()=>sortUp('AGE18')}>check 18</SuperButton></div>\n\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW8\n","\n export type stateType = {_id:number, name:string, age:number}\nexport const homeWorkReducer = (state: Array<stateType> , action:{type:string}):  Array<stateType>  => {\n    switch (action.type) {\n        case 'UP': {\n           return  [...state].sort((a:stateType, b:stateType)=> a.name.localeCompare(b.name))\n        }\n        case 'DOWN': {\n            return  [...state].sort((a:stateType, b:stateType)=> b.name.localeCompare(a.name))\n\n        }\n        case 'AGE18': {\n            return state.filter(f=> f.age >= 18)\n        }\n        default: return state\n    }\n}","import React, {useState} from 'react'\n\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0)\n    const [date, setDate] = useState<Date>()\n    const [show, setShow] = useState<boolean>(false)\n\n    const stop = () => {\n        clearInterval(timerId)\n\n    }\n    const start = () => {\n        stop()\n        const id: number = window.setInterval(() => {\n            setDate(new Date())\n        }, 1000)\n        setTimerId(id)\n    }\n\n    const onMouseEnter = () => {\n        setShow(true)\n    }\n    const onMouseLeave = () => {\n        setShow(false)\n    }\n\n    const stringTime = date?.toLocaleTimeString() // fix with date\n    const stringDate = date?.toLocaleDateString()  // fix with date\n\n    return (\n\n        <div  >\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n            </div>\n\n            {show && (\n                <div>\n                    {stringDate}\n                </div>\n            )}\n            <div style={{display:\"inline-flex\"}}>\n            <button  onClick={start}>start</button>\n            <button  onClick={stop}>stop</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Clock\n","import React from 'react'\nimport Clock from './Clock'\n\nfunction HW9() {\n    return (\n        <div>\n            <hr/>\n            homeworks 9\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW9\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst motion = props => keyframes`\r\n  0%,\r\n  100% {\r\n    animation-timing-function: cubic-bezier(0.5, 0, 1, 0.5);\r\n  }\r\n  0% {\r\n    transform: rotateY(0deg);\r\n  }\r\n  50% {\r\n    transform: rotateY(1800deg);\r\n    animation-timing-function: cubic-bezier(0, 0.5, 0.5, 1);\r\n  }\r\n  100% {\r\n    transform: rotateY(3600deg);\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: inline-block;\r\n  transform: translateZ(1px);\r\n`\r\n\r\nconst CircleSpinner = styled.div`\r\n  display: inline-block;\r\n  width: ${p => `${p.size}${p.sizeUnit}`};\r\n  height: ${p => `${p.size}${p.sizeUnit}`};\r\n  margin: 6px;\r\n  border-radius: 50%;\r\n  background: ${p => p.color};\r\n  animation: ${p => motion(p)} 2.4s cubic-bezier(0, 0.2, 0.8, 1) infinite;\r\n`\r\n\r\nconst Circle = ({ color, size, sizeUnit }) => (\r\n    <Wrapper>\r\n        <CircleSpinner color={color} size={size} sizeUnit={sizeUnit} />\r\n    </Wrapper>\r\n)\r\n\r\nCircle.defaultProps = {\r\n    size: 50,\r\n    color: '#00bfff',\r\n    sizeUnit: 'px'\r\n}\r\n\r\nexport default Circle","const initState = false\n\nexport const loadingReducer = (state:boolean = initState, action: loadingType): boolean => { // fix any\n    switch (action.type) {\n        case 'LOADING': {return state=action.value}\n        default: return state\n    }\n}\n\ntype loadingType = ReturnType<typeof loadingAC>\nexport const loadingAC = (value:boolean) => {return{ type:'LOADING', value}as const} // fix any","import React from 'react'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport Preloader from \"./Preloader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"./bll/store\";\nimport {loadingAC} from \"./bll/loadingReducer\";\n\nfunction HW10() {\n    const loading = useSelector<AppStoreType, boolean>(state => state.loadingReducer)\n    const dispatch = useDispatch()\n\n    const setLoading = () => {\n        dispatch(loadingAC(true))\n        setTimeout(()=> { dispatch(loadingAC(false)) }, 2000)\n    };\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 10\n\n            {/*should work (должно работать)*/}\n            {loading\n                ? (\n                    <div><Preloader/></div>\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW10\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n        console.log(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import {\n    ChangeEvent,\n    FC,\n    useCallback,\n    useEffect,\n    useState,\n    useRef\n} from \"react\";\nimport classnames from \"classnames\";\nimport './SuperDoubleRange.css';\n\ninterface MultiRangeSliderProps {\n    min: number;\n    max: number;\n    onChange: Function;\n}\n\nconst MultiRangeSlider: FC<MultiRangeSliderProps> = ({\n                                                         min,\n                                                         max,\n                                                         onChange\n                                                     }) => {\n    const [minVal, setMinVal] = useState(min);\n    const [maxVal, setMaxVal] = useState(max);\n    const minValRef = useRef<HTMLInputElement>(null);\n    const maxValRef = useRef<HTMLInputElement>(null);\n    const range = useRef<HTMLDivElement>(null);\n\n    // Convert to percentage\n    const getPercent = useCallback(\n        (value: number) => Math.round(((value - min) / (max - min)) * 100),\n        [min, max]\n    );\n\n    // Set width of the range to decrease from the left side\n    useEffect(() => {\n        if (maxValRef.current) {\n            const minPercent = getPercent(minVal);\n            const maxPercent = getPercent(+maxValRef.current.value); // Precede with '+' to convert the value from type string to type number\n\n            if (range.current) {\n                range.current.style.left = `${minPercent}%`;\n                range.current.style.width = `${maxPercent - minPercent}%`;\n            }\n        }\n    }, [minVal, getPercent]);\n\n    // Set width of the range to decrease from the right side\n    useEffect(() => {\n        if (minValRef.current) {\n            const minPercent = getPercent(+minValRef.current.value);\n            const maxPercent = getPercent(maxVal);\n\n            if (range.current) {\n                range.current.style.width = `${maxPercent - minPercent}%`;\n            }\n        }\n    }, [maxVal, getPercent]);\n\n    // Get min and max values when their state changes\n    useEffect(() => {\n        onChange({ min: minVal, max: maxVal });\n    }, [minVal, maxVal, onChange]);\n\n    return (\n        <div className=\"container\">\n            <input\n                type=\"range\"\n                min={min}\n                max={max}\n                value={minVal}\n                ref={minValRef}\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                    const value = Math.min(+event.target.value, maxVal - 1);\n                    setMinVal(value);\n                    event.target.value = value.toString();\n                }}\n                className={classnames(\"thumb thumb--zindex-3\", {\n                    \"thumb--zindex-5\": minVal > max - 100\n                })}\n            />\n            <input\n                type=\"range\"\n                min={min}\n                max={max}\n                value={maxVal}\n                ref={maxValRef}\n                onChange={(event: ChangeEvent<HTMLInputElement>) => {\n                    const value = Math.max(+event.target.value, minVal + 1);\n                    setMaxVal(value);\n                    event.target.value = value.toString();\n                }}\n                className=\"thumb thumb--zindex-4\"\n            />\n\n            <div className=\"slider\">\n                <div className=\"slider__track\"></div>\n                <div ref={range} className=\"slider__range\"></div>\n                {/*<div className=\"slider__left-value\">{minVal}</div>*/}\n                {/*<div className=\"slider__right-value\">{maxVal}</div>*/}\n            </div>\n        </div>\n    );\n};\n\nexport default MultiRangeSlider;\n","import React, {useState} from 'react'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\nimport MultiRangeSlider from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\n\nfunction HW11() {\n    const [value1, setValue1] = useState(0)\n    const [value2, setValue2] = useState(100)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange\n                    onChangeRange={(arr)=>setValue1(arr) }\n                    // сделать так чтоб value1 изменялось\n                />\n            </div>\n\n            <div>\n                <MultiRangeSlider min={0}\n                                  max={1000}\n                                  onChange={({ min, max }: { min: number; max: number }) =>\n                                      setValue2(max-min)\n                                      // console.log(`min = ${min}, max = ${max}`)\n                                  }/>\n                <span>{value2}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW11\n","\n\nconst initState = 'some';\n\nexport const themeReducer = (state = initState, action: changeThemeType):string => { // fix any\n    switch (action.type) {\n        case \"CHANGE-THEME\": {\n            return state = action.value;\n        }\n        default: return state;\n    }\n};\ntype changeThemeType = ReturnType<typeof changeThemeAC>\n\nexport const changeThemeAC = (value:string) => {return {type:'CHANGE-THEME', value} as const}; // fix any","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport s from \"./HW12.module.css\";\nimport {changeThemeAC} from \"./bll/themeReducer\";\nimport {AppStoreType} from \"../h10/bll/store\";\n\nconst themes = ['dark', 'red', 'some'];\n\nfunction HW12() {\n    const theme =useSelector<AppStoreType, string >(state=> state.themeReducer); // useSelector\n    let dispatch = useDispatch()\n\n\n    const onChangeCallback = (e: string) => {\n        dispatch(changeThemeAC(e))\n    }\n\n    return (\n        <div className={s[theme]}>\n            <hr/>\n            <span className={s[theme + '-text']}>\n               <select className={s[theme]} value={theme} onChange={(e) => {\n                   onChangeCallback(e.currentTarget.value)\n               }}>\n                   {themes.map(m=> {\n                       return <option className={s[theme == m ? theme +'-text':'']} value={m}> {m} </option>\n                   })}\n               </select>\n            </span>\n\n            {/*should work (должно работать)*/}\n            {/*SuperSelect or SuperRadio*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from 'react';\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from '../../h9/HW9';\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from '../../h11/HW11';\r\nimport HW12 from '../../h12/HW12';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Routes, Route} from 'react-router-dom'\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior_plus',\n    // ERROR: '/error-404'\n    // add paths\n}\n\nfunction Routes2() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n\n\n            <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n            <Route path={PATH.JUNIOR} element={<Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} element={<div>JUNIOR_PLUS</div>}/>\n            <Route path={'/*'} element={<Error404/>}  />\n\n\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Routes2\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport './NavLink.css'\n\n\nfunction Header() {\n    return (\n        <ul className='menu-main'>\n         <li><NavLink className={({ isActive }) => isActive ? 'current' : ''} to={PATH.PRE_JUNIOR}> Pre Junior  </NavLink></li>\n          <li> <NavLink  className={({ isActive }) => isActive ? 'current' : ''} to={PATH.JUNIOR}>   Junior  </NavLink></li>\n          <li><NavLink className={({ isActive }) => isActive ? 'current' : ''} to={PATH.JUNIOR_PLUS} > Junior Plus  </NavLink></li>\n        </ul>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter} from 'react-router-dom'\nimport Header from './Header'\nimport Routes2 from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes2/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import { combineReducers, createStore } from 'redux'\nimport {loadingReducer} from './loadingReducer'\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\n\nconst reducers = combineReducers({\n    loadingReducer,\n    themeReducer\n\n})\n\nconst store = createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport store from './p2-homeworks/h10/bll/store'\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}