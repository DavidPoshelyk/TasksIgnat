{"version":3,"sources":["p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h3/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","c","global","avatar","src","message","name","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","SuperButton","red","restProps","finalClassName","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","New","charAt","toUpperCase","slice","inputClass","length","input","div","code","placeholder","button","GreetingContainer","users","addUserCallback","setName","setError","includes","toLowerCase","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","buttondelete","disabled","buttondisable","check","PreJunior","Error404","PATH","Routes2","path","element","Header","isActive","to","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.8026507e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3Y0OT\",\"column\":\"HW4_column__2y8vg\",\"testSpanError\":\"HW4_testSpanError__2TZqf\",\"button\":\"HW4_button__1jKPL\",\"input\":\"HW4_input__1ZDgE\",\"span\":\"HW4_span__1rVZu\",\"buttondelete\":\"HW4_buttondelete__29JSE\",\"buttondisable\":\"HW4_buttondisable__2PFi2\",\"custom-checkbox\":\"HW4_custom-checkbox__1QjLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Message_global__2ZzuQ\",\"avatar\":\"Message_avatar__2GcBa\",\"message\":\"Message_message__33u83\",\"name\":\"Message_name__2fs5z\",\"time\":\"Message_time__f0-qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__277mM\",\"error\":\"Greeting_error__po7LW\",\"button\":\"Greeting_button__3aOh8\",\"input\":\"Greeting_input__2uPFg\",\"span\":\"Greeting_span__3Gr71\",\"div\":\"Greeting_div__2-TPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3vDG1\",\"errorInput\":\"SuperInputText_errorInput__fM_WM\",\"error\":\"SuperInputText_error__28Imc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2ut5l\",\"errorInput\":\"SuperInputText_errorInput__2burA\",\"error\":\"SuperInputText_error__3zCTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1GCBr\",\"spanClassName\":\"SuperCheckbox_spanClassName__3XtVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15a0_\"};","import React from 'react'\nimport c from \"./Message.module.css\"\n\n\ntype  typeData = {\n    avatar: string,\n    name: string,\n    message: string,\n    time:string\n}\n\n\n\nfunction Message(props:typeData) {\n    return (\n        <div className={c.global}>\n            <div className={c.avatar}>\n               <img src={props.avatar}/>\n            </div>\n            <div className={c.message}>\n                {props.message}\n            </div>\n            <div className={c.name}>\n                <b> {props.name}</b>\n            </div>\n            <div className={c.time}>\n                   {props.time}\n            </div>\n        </div>\n    )\n}\n\nexport default Message;\n","import React from 'react'\nimport Message from './Message'\n\ntype  typeData = {\n    avatar: string,\n    name: string,\n    messages: string,\n    time: string\n}\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'Ты нажал NPM?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n    return (\n        <div>\n\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair;\n","import React, { Dispatch, SetStateAction } from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a:AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = any // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string\n}\nexport type  FilterType = 'high'|'low'|'middle'|'all'\n\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter:FilterType ):any => {\n\n    if (filter === 'all') return  affairs.filter( f => f.priority === f.priority)\n    if (filter === 'high') return  affairs.filter( f => f.priority === 'high')\n    if (filter === 'middle') return  affairs.filter( f => f.priority === 'middle')\n    if (filter === 'low') return  affairs.filter( f => f.priority === 'low')\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number):Array<AffairType> => affairs.filter( a => a._id !== _id )\n\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)  // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className: ''}`  // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\nimport SuperInputText from \"./c1-SuperInputText/SuperInputText\";\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting = ({name, setNameCallback, addUser, error, totalUsers}: GreetingPropsType) => {\n    let New = name.charAt(0).toUpperCase() + name.slice(1)\n\n    let inputClass = (New.length <= 2 ? s.error : s.input)\n    const onKeyPress = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.code === \"Enter\") {\n            addUser()\n        }\n    }\n\n\n    return (\n        <div className={s.div} onKeyPress={onKeyPress}>\n            <SuperInputText placeholder={error} className={inputClass} value={New} onChange={setNameCallback}/>\n            {/*<input value={New} onChange={setNameCallback} className={inputClass}/>*/}\n           <SuperButton onClick={addUser} className={s.button}>add</SuperButton>\n            {/*<button onClick={addUser}>add</button>*/}\n           <b > {totalUsers}</b>\n\n\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer = ({users, addUserCallback}: GreetingContainerPropsType) => { // деструктуризация пропсов\n    const [name, setName] = useState<any>('') // need to fix any\n    const [error, setError] = useState<any>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        let arr_en = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ''];\n        const value = e.currentTarget.value\n        if (arr_en.includes(value.slice(-1).toLowerCase())) {\n            setError('')\n            setName(value)\n        }\n    }\n\n    const addUser = () => {\n        if (name.length <= 2) {\n            setName('')\n            setError('error')\n        } else {\n            alert(`Hello ${name} ! `)\n            addUserCallback(name)\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let New: UserType = {\n            name: name,\n            _id: v1()\n        }\n        setUsers([New, ...users]) // need to fix\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className: ''}`  // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange,\n        onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        {onChangeChecked &&  onChangeChecked(e.currentTarget.checked)}\n        {onChange && onChange(e)}\n\n\n            // onChangeChecked(e.currentTarget.checked)\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n\n            <input\n                type={'checkbox'}\n                onChange={ onChangeCallback}\n                className={finalInputClassName}\n                checked={restProps.checked}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    className={s.input}\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.input}// проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton  className={s.button} >\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                    className={s.buttondelete}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled className={s.buttondisable}>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                    className={s.check}\n                >\n\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox   checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport './Error404.css'\n\n\n\nfunction Error404() {\n    return (\n        <div className='error'>\n            <div >404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport PreJunior from \"./pages/PreJunior\";\nimport {Routes, Route} from 'react-router-dom'\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior_plus',\n    // ERROR: '/error-404'\n    // add paths\n}\n\nfunction Routes2() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n\n\n            <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n            <Route path={PATH.JUNIOR} element={<div>JUNIOR</div>}/>\n            <Route path={PATH.JUNIOR_PLUS} element={<div>JUNIOR_PLUS</div>}/>\n            <Route path={'/*'} element={<Error404/>}  />\n\n\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default Routes2\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport './NavLink.css'\n\n\nfunction Header() {\n    return (\n        <ul className='menu-main'>\n         <li><NavLink className={({ isActive }) => isActive ? 'current' : ''} to={PATH.PRE_JUNIOR}> Pre Junior  </NavLink></li>\n          <li> <NavLink  className={({ isActive }) => isActive ? 'current' : ''} to={PATH.JUNIOR}>   Junior  </NavLink></li>\n          <li><NavLink className={({ isActive }) => isActive ? 'current' : ''} to={PATH.JUNIOR_PLUS} > Junior Plus  </NavLink></li>\n        </ul>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter} from 'react-router-dom'\nimport Header from './Header'\nimport Routes2 from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes2/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}